<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>￥ЯႭ1I0</title>
    <link>http://yrq110.me/post/</link>
    <description>Recent content on ￥ЯႭ1I0</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 11 May 2020 10:38:16 +0800</lastBuildDate>
    
	<atom:link href="http://yrq110.me/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>深入学习Three.js核心对象之（二）Geometry</title>
      <link>http://yrq110.me/post/front-end/deep-in-threejs-core-objects-ii-geometry/</link>
      <pubDate>Mon, 11 May 2020 10:38:16 +0800</pubDate>
      
      <guid>http://yrq110.me/post/front-end/deep-in-threejs-core-objects-ii-geometry/</guid>
      <description>&lt;p&gt;分析构成模型对象的重要元素之一：Geometry（几何体）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Geometry的属性: 基础属性与动画属性&lt;/li&gt;
&lt;li&gt;Geometry的方法: 基础变换、Mesh与顶点合并、点面法线、包围盒/球计算&lt;/li&gt;
&lt;li&gt;BufferGeometry 与 DirectGeometry(Todo)&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>深入学习Three.js核心对象之（一）Object3D</title>
      <link>http://yrq110.me/post/front-end/deep-in-threejs-core-objects-i-object3d/</link>
      <pubDate>Wed, 06 May 2020 19:15:03 +0800</pubDate>
      
      <guid>http://yrq110.me/post/front-end/deep-in-threejs-core-objects-i-object3d/</guid>
      <description>&lt;p&gt;从底层对象开始，看看Threejs如果利用图形学知识，通过各种数据对象构建场景，最终通过渲染器绘制出来。首先来看看最基础的Object3D对象，内容包含：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;官方demo引入: 主要对象分析&lt;/li&gt;
&lt;li&gt;Object3D的属性: 位置、欧拉角、四元数、变换矩阵等&lt;/li&gt;
&lt;li&gt;Object3D的变换: 以世界空间或模型空间为参考系的基础变换&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>欧拉角、万向节死锁与四元数</title>
      <link>http://yrq110.me/post/computer-graphics/euler-angles-gimbal-lock-and-quaternion/</link>
      <pubDate>Tue, 05 May 2020 14:26:32 +0800</pubDate>
      
      <guid>http://yrq110.me/post/computer-graphics/euler-angles-gimbal-lock-and-quaternion/</guid>
      <description>&lt;p&gt;简单整理下四元数旋转相关的一些概念：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;欧拉角：旋转顺序与内外旋&lt;/li&gt;
&lt;li&gt;万向节死锁：旋转轴共面与自由度丢失&lt;/li&gt;
&lt;li&gt;四元数：表示与计算、几何意义与球形插值&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>class中的箭头函数会输出什么</title>
      <link>http://yrq110.me/post/front-end/arrow-function-in-class-proporties/</link>
      <pubDate>Thu, 02 Apr 2020 15:06:25 +0800</pubDate>
      
      <guid>http://yrq110.me/post/front-end/arrow-function-in-class-proporties/</guid>
      <description>&lt;p&gt;记录由于自身太菜而让人产生很多问号的JS行为&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Web通信中的跨文档通信</title>
      <link>http://yrq110.me/post/front-end/cross-domain-and-cross-document-communication/</link>
      <pubDate>Sun, 22 Mar 2020 14:32:39 +0800</pubDate>
      
      <guid>http://yrq110.me/post/front-end/cross-domain-and-cross-document-communication/</guid>
      <description>&lt;p&gt;跨文档通信(cross-document messaging)与消息通道通信(channel messaging)简介&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>TypeScript装饰器整理及用例介绍</title>
      <link>http://yrq110.me/post/front-end/typescript-decorator-practice/</link>
      <pubDate>Tue, 10 Mar 2020 09:59:18 +0800</pubDate>
      
      <guid>http://yrq110.me/post/front-end/typescript-decorator-practice/</guid>
      <description>&lt;p&gt;整理下TS装饰器(Decorator)的相关内容。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;装饰器种类&lt;/li&gt;
&lt;li&gt;装饰器工厂与组合使用&lt;/li&gt;
&lt;li&gt;metadata reflecion API&lt;/li&gt;
&lt;li&gt;开源库中的使用&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>跨平台的浏览器自动化工具Playwright简析</title>
      <link>http://yrq110.me/post/front-end/dive-into-playwright/</link>
      <pubDate>Mon, 09 Mar 2020 13:49:15 +0800</pubDate>
      
      <guid>http://yrq110.me/post/front-end/dive-into-playwright/</guid>
      <description>&lt;p&gt;从以下几个方面分析下Puppeteer的衍生项目&lt;strong&gt;Playwirght&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基本介绍与使用示例&lt;/li&gt;
&lt;li&gt;云原生：BrowserContext的隔离与增强&lt;/li&gt;
&lt;li&gt;跨平台：不同平台通用的Client与Server实现&lt;/li&gt;
&lt;li&gt;多选择器：内置与自定义选择器引擎&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>使用TypeScript开发Web应用的最佳实践</title>
      <link>http://yrq110.me/post/front-end/best-practice-of-typescript-in-webapp-developing/</link>
      <pubDate>Wed, 19 Feb 2020 01:44:17 +0800</pubDate>
      
      <guid>http://yrq110.me/post/front-end/best-practice-of-typescript-in-webapp-developing/</guid>
      <description>&lt;p&gt;TS的开发经验总结，主要包含以下几个方面的内容&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;编译工具的特点与比较&lt;/li&gt;
&lt;li&gt;语言特性的选择与使用&lt;/li&gt;
&lt;li&gt;模块系统与自定义类型&lt;/li&gt;
&lt;li&gt;其他使用技巧&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;译自：&lt;a href=&#34;https://qiita.com/jagaapple/items/ce0da04be28c35dc7d4f&#34;&gt;TypeScriptをプロダクト開発に使う上でのベストプラクティスと心得&lt;/a&gt; | &lt;a href=&#34;https://qiita.com/jagaapple&#34;&gt;@jagaapple&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Canvas2D渲染库简析:（三）Pixi</title>
      <link>http://yrq110.me/post/front-end/dive-into-2d-canvas-framework-iii-pixi/</link>
      <pubDate>Mon, 30 Dec 2019 16:59:36 +0800</pubDate>
      
      <guid>http://yrq110.me/post/front-end/dive-into-2d-canvas-framework-iii-pixi/</guid>
      <description>&lt;p&gt;fabric和konva主要是用于实现编辑器的场景，而Pixi则是一个高性能2D动画渲染库，通常用于一些H5的小游戏或可交互页面。&lt;/p&gt;
&lt;p&gt;本次通过以下几个方面来对其进行分析：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;WebGL与Canvas渲染器&lt;/li&gt;
&lt;li&gt;资源加载器与纹理&lt;/li&gt;
&lt;li&gt;场景、精灵与图形对象&lt;/li&gt;
&lt;li&gt;变换、交互及动画处理&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Canvas2D渲染库简析:（二）Konva</title>
      <link>http://yrq110.me/post/front-end/dive-into-2d-canvas-framework-ii-konva/</link>
      <pubDate>Tue, 24 Dec 2019 15:29:59 +0800</pubDate>
      
      <guid>http://yrq110.me/post/front-end/dive-into-2d-canvas-framework-ii-konva/</guid>
      <description>&lt;p&gt;与古老的Fabric相比，Konva的使用更为便捷，性能更加优益，这些得益于其内部的种种设计，本次通过以下几个方面来对其进行分析：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基础元素及上下文的扩展&lt;/li&gt;
&lt;li&gt;图形变换处理(&lt;strong&gt;变换计算及独立的图形控制器&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;光标交互处理(&lt;strong&gt;基于像素的目标检测&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;层级渲染处理&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Canvas2D渲染库简析:（一）Fabric</title>
      <link>http://yrq110.me/post/front-end/dive-into-2d-canvas-framework-i-fabric/</link>
      <pubDate>Mon, 23 Dec 2019 09:15:56 +0800</pubDate>
      
      <guid>http://yrq110.me/post/front-end/dive-into-2d-canvas-framework-i-fabric/</guid>
      <description>&lt;p&gt;了解Canvas2D渲染功能实现与设计，在使用时知其所以然，在创造时有所借鉴。从以下这四个方面来分析Fabric.js&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对象模型处理(使用及设计实现)&lt;/li&gt;
&lt;li&gt;图形变换处理(&lt;strong&gt;canvas与object变换&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;光标交互处理(&lt;strong&gt;目标检测&lt;/strong&gt;与&lt;strong&gt;事件处理&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;画布与对象渲染处理(&lt;strong&gt;多层结构&lt;/strong&gt;与&lt;strong&gt;多阶段绘制&lt;/strong&gt;)&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Puppeteer&#43;Canvas的E2E测试实践</title>
      <link>http://yrq110.me/post/front-end/practice-in-e2e-test-with-puppeteer/</link>
      <pubDate>Tue, 17 Dec 2019 14:14:30 +0800</pubDate>
      
      <guid>http://yrq110.me/post/front-end/practice-in-e2e-test-with-puppeteer/</guid>
      <description>&lt;p&gt;针对具有复杂canvas交互操作的e2e测试，尝试使用puppeteer模拟复杂canvas交互，自动执行相关测试用例，利于减少重复的人工验证和回归测试。&lt;/p&gt;
&lt;p&gt;主要做了&lt;strong&gt;封装通用操作&lt;/strong&gt;，&lt;strong&gt;添加操作辅助类&lt;/strong&gt;，&lt;strong&gt;与测试工具集成&lt;/strong&gt;，&lt;strong&gt;结果验证&lt;/strong&gt;等工作。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Lerna的依赖管理及hoisting浅析</title>
      <link>http://yrq110.me/post/devops/how-lerna-manage-package-dependencies/</link>
      <pubDate>Mon, 02 Dec 2019 11:29:23 +0800</pubDate>
      
      <guid>http://yrq110.me/post/devops/how-lerna-manage-package-dependencies/</guid>
      <description>&lt;p&gt;简单分析下lerna中依赖管理的部分&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在使用lerna时，若使用yarn作为npmClient并开启workspace功能，则bootstrap命令会代理给yarn执行&lt;/li&gt;
&lt;li&gt;相同的依赖通过提升(hoist)安装在根路径下，本地包之间的依赖通过软链接实现&lt;/li&gt;
&lt;li&gt;虽然在依赖处理部分yarn的底层具有较好的实现，但lerna提供的上层指令则方便了开发者的使用&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>一个像素的一生 - 剖析Chromium渲染流水线</title>
      <link>http://yrq110.me/post/front-end/chromium-rendering-pipeline-step-by-step/</link>
      <pubDate>Wed, 06 Nov 2019 11:02:30 +0800</pubDate>
      
      <guid>http://yrq110.me/post/front-end/chromium-rendering-pipeline-step-by-step/</guid>
      <description>&lt;p&gt;介绍目前Chromium中渲染流水线中的主要阶段及其工作。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Web也要在GPU并行计算中分一杯羹？</title>
      <link>http://yrq110.me/post/front-end/try-gpu-operations-in-web/</link>
      <pubDate>Mon, 28 Oct 2019 20:44:07 +0800</pubDate>
      
      <guid>http://yrq110.me/post/front-end/try-gpu-operations-in-web/</guid>
      <description>&lt;p&gt;目前Web中主要有两种方式可以显式的调用GPU来执行计算任务：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;GPU.js - 第三方工具。使用JS编写计算任务，内部转换成GLSL交由GPU(OpenGL ES)处理&lt;/li&gt;
&lt;li&gt;WebGPU - w3c规范(19-11-12时处于Editor’s Draft阶段)，提供通用的GPU API，抹平不同底层图形API之间的差异(Vulkan, D3D, Metal)&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>Worker中的OffscreenCanvas渲染实践与浅析</title>
      <link>http://yrq110.me/post/front-end/offscreen-canvas-practice/</link>
      <pubDate>Fri, 18 Oct 2019 09:49:05 +0800</pubDate>
      
      <guid>http://yrq110.me/post/front-end/offscreen-canvas-practice/</guid>
      <description>&lt;p&gt;Tl;DR：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;OffscreenCanvas&lt;/strong&gt;可以让你在Worker线程中渲染图形，支持多种&lt;strong&gt;RenderingContext&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;两种使用方式：同步的&lt;strong&gt;Transfer模式&lt;/strong&gt;与异步的&lt;strong&gt;Control模式&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;将Canvas的&lt;strong&gt;逻辑计算与渲染分离&lt;/strong&gt;，避免UI线程阻塞&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>从交互示例体验两类坐标相关DOM API</title>
      <link>http://yrq110.me/post/front-end/position-used-api-introduction/</link>
      <pubDate>Mon, 30 Sep 2019 14:48:28 +0800</pubDate>
      
      <guid>http://yrq110.me/post/front-end/position-used-api-introduction/</guid>
      <description>&lt;p&gt;通常坐标多数是用来处理交互时的鼠标位置，其实使用坐标还可以进行&lt;strong&gt;元素选择&lt;/strong&gt;与&lt;strong&gt;获取内容偏移量&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;介绍与坐标相关的几个冷门API: elementFromPoint()、caretPositionFromPoint()等。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Canvas从小试牛刀到庖丁解牛</title>
      <link>http://yrq110.me/post/front-end/canvas-travel/</link>
      <pubDate>Mon, 16 Sep 2019 09:51:34 +0800</pubDate>
      
      <guid>http://yrq110.me/post/front-end/canvas-travel/</guid>
      <description>&lt;p&gt;关于canvas的使用经验及深入学习总结，主要有以下几个方面：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;基础绘图、平滑曲线和交互变换&lt;/li&gt;
&lt;li&gt;状态管理及图像处理&lt;/li&gt;
&lt;li&gt;性能优化与绘制原理&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>Canvas效果片段</title>
      <link>http://yrq110.me/post/front-end/canvas-effect-snippets/</link>
      <pubDate>Tue, 04 Jun 2019 11:17:32 +0800</pubDate>
      
      <guid>http://yrq110.me/post/front-end/canvas-effect-snippets/</guid>
      <description>&lt;p&gt;总结在使用canvas时遇到的一些通用效果实现与相关示例。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Puppeteer常用API浅析</title>
      <link>http://yrq110.me/post/front-end/swim-in-shallow-puppeteer-api/</link>
      <pubDate>Fri, 19 Apr 2019 13:12:34 +0800</pubDate>
      
      <guid>http://yrq110.me/post/front-end/swim-in-shallow-puppeteer-api/</guid>
      <description>&lt;p&gt;从CDP与源码的角度简单分析下pptr中的常用API&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>了解一下CSS Houdini API</title>
      <link>http://yrq110.me/post/front-end/try-houdini-api/</link>
      <pubDate>Thu, 18 Apr 2019 18:08:25 +0800</pubDate>
      
      <guid>http://yrq110.me/post/front-end/try-houdini-api/</guid>
      <description>&lt;p&gt;Houdini, in essence, gives developers lower level access to CSS itself.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Worklets, TypedOM, Custom Properties&lt;/li&gt;
&lt;li&gt;Paint API, Animation API, Layout API&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>微信小程序WebSocket实践</title>
      <link>http://yrq110.me/post/front-end/wxapp-ws-practice/</link>
      <pubDate>Thu, 04 Apr 2019 11:36:35 +0800</pubDate>
      
      <guid>http://yrq110.me/post/front-end/wxapp-ws-practice/</guid>
      <description>&lt;p&gt;微信基础库1.7.0之后的版本提供了新版的WebSocket API，考虑到兼容性问题，尝试整合新旧两种版本的API，进行简单的封装。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>微信小程序开发中的代码片段总结</title>
      <link>http://yrq110.me/post/front-end/code-snippets-of-wxapp/</link>
      <pubDate>Fri, 15 Mar 2019 13:36:32 +0800</pubDate>
      
      <guid>http://yrq110.me/post/front-end/code-snippets-of-wxapp/</guid>
      <description>&lt;p&gt;经过一段时间的微信小程序开发，总结了一些代码片段，主要是以下几个方面：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;小程序（授权、网络、录音、图像）&lt;/li&gt;
&lt;li&gt;mpvue（分包、全局变量、svg组件、组件class绑定）&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Web Worker融会贯通</title>
      <link>http://yrq110.me/post/front-end/introduction-to-web-worker/</link>
      <pubDate>Tue, 12 Mar 2019 16:24:19 +0800</pubDate>
      
      <guid>http://yrq110.me/post/front-end/introduction-to-web-worker/</guid>
      <description>&lt;p&gt;介绍与web worker有关的:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;概况: 支持情况, 类型, 特点等&lt;/li&gt;
&lt;li&gt;使用场景: 轮询, 复杂数据解析, JS库的代理等&lt;/li&gt;
&lt;li&gt;相关工具: workerize, comlink等&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>鸟瞰Docker</title>
      <link>http://yrq110.me/post/devops/overview-of-docker/</link>
      <pubDate>Mon, 25 Feb 2019 00:46:02 +0800</pubDate>
      
      <guid>http://yrq110.me/post/devops/overview-of-docker/</guid>
      <description>&lt;p&gt;原文是来自&lt;a href=&#34;https://qiita.com/kotaro-dr/items/b1024c7d200a75b992fc&#34;&gt;qiita&lt;/a&gt;的&lt;a href=&#34;https://qiita.com/kotaro-dr&#34;&gt;etaro&lt;/a&gt;所写的系列文章。&lt;/p&gt;
&lt;p&gt;从镜像和容器到docker-compose、docker-machine、docker swarm等将docker相关的概念一网打尽，理解docker的组成与结构。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;相关配图没空P了&amp;gt;_&amp;lt;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>可爱的Puppeteer使用小技巧</title>
      <link>http://yrq110.me/post/front-end/some-tips-of-using-puppetter/</link>
      <pubDate>Wed, 23 Jan 2019 20:02:50 +0800</pubDate>
      
      <guid>http://yrq110.me/post/front-end/some-tips-of-using-puppetter/</guid>
      <description>&lt;p&gt;总结一些使用puppetter的小技巧，从下面几个角度：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;浏览器的启动与请求&lt;/li&gt;
&lt;li&gt;页面的加载与渲染&lt;/li&gt;
&lt;li&gt;执行优化与状态管理&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>incremental-dom简析</title>
      <link>http://yrq110.me/post/front-end/brief-of-incremental-dom/</link>
      <pubDate>Tue, 15 Jan 2019 15:18:34 +0800</pubDate>
      
      <guid>http://yrq110.me/post/front-end/brief-of-incremental-dom/</guid>
      <description>&lt;p&gt;想必对于virtual-dom(以下简称vdom)已经耳熟能详了，react和vue均使用了vdom，在更新与DOM时具有效率高、速度快的特点(相比于直接操作dom)。那么incremental-dom又是什么呢？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>当我们在说事件循环时，我们在说什么</title>
      <link>http://yrq110.me/post/front-end/under-the-hood-at-event-loop/</link>
      <pubDate>Thu, 10 Jan 2019 16:01:58 +0800</pubDate>
      
      <guid>http://yrq110.me/post/front-end/under-the-hood-at-event-loop/</guid>
      <description>&lt;p&gt;梳理一下浏览器与Node中的事件循环，它们的一些特征:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;浏览器: 不同的实现, browser context&lt;/li&gt;
&lt;li&gt;Node: 多个阶段, process.nextTick()&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>配置Electron中Puppeteer executablePath的正确姿势</title>
      <link>http://yrq110.me/post/front-end/the-right-way-to-use-puppeteer-in-electron/</link>
      <pubDate>Sun, 06 Jan 2019 19:52:34 +0800</pubDate>
      
      <guid>http://yrq110.me/post/front-end/the-right-way-to-use-puppeteer-in-electron/</guid>
      <description>&lt;p&gt;TL; NR&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;轻量, remote调用(使用本地chrome) =&amp;gt; &lt;code&gt;puppeteer-core&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;将chromium整合进安装包(需要asar打包时排除chromium), &lt;strong&gt;macOS下验证失败&lt;/strong&gt; =&amp;gt; &lt;code&gt;puppeteer&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>git rebase/submodule/flow介绍</title>
      <link>http://yrq110.me/post/devops/git-rebase-submodule-and-flow/</link>
      <pubDate>Sat, 29 Dec 2018 10:23:52 +0800</pubDate>
      
      <guid>http://yrq110.me/post/devops/git-rebase-submodule-and-flow/</guid>
      <description>&lt;p&gt;整理并学习几个git中的工具:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://git-scm.com/docs/git-rebase&#34;&gt;rebase&lt;/a&gt; - 用于合并提交，重写历史，较&lt;code&gt;merge&lt;/code&gt;更复杂&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://git-scm.com/docs/git-submodule&#34;&gt;submodule&lt;/a&gt; - 子模块功能，用于管理项目中包含的独立子模块&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/petervanderdoes/gitflow-avh&#34;&gt;git-flow&lt;/a&gt; - 一个工具，提供flow命令来简化符合&lt;a href=&#34;https://nvie.com/posts/a-successful-git-branching-model/&#34;&gt;&lt;code&gt;git branching model&lt;/code&gt;&lt;/a&gt;中规范的操作&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>使用Hugo构建博客</title>
      <link>http://yrq110.me/post/go/build-blog-by-using-hugo/</link>
      <pubDate>Thu, 27 Dec 2018 17:24:55 +0800</pubDate>
      
      <guid>http://yrq110.me/post/go/build-blog-by-using-hugo/</guid>
      <description>&lt;p&gt;尝试用&lt;a href=&#34;https://gohugo.io/&#34;&gt;hugo&lt;/a&gt;构建博客，替代之前的hexo，主要原因：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;静态文件生成，当文章数量变多时，hexo(node)的生成速度明显变慢，而hugo(go)依旧像飞毛腿一样。&lt;/li&gt;
&lt;li&gt;功能，从文档上来看，在&lt;a href=&#34;https://gohugo.io/content-management/&#34;&gt;内容管理&lt;/a&gt;与&lt;a href=&#34;https://gohugo.io/templates/&#34;&gt;模板功能&lt;/a&gt;方面，hugo所提供的更加丰富和灵活。&lt;/li&gt;
&lt;li&gt;主题，不像之前喜欢比较花里胡哨的了，hugo的主题就满足了。&lt;/li&gt;
&lt;li&gt;个人需求较少，hexo其实也没有深入使用。&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>Lerna初探</title>
      <link>http://yrq110.me/post/devops/study-on-lerna/</link>
      <pubDate>Thu, 27 Dec 2018 14:39:37 +0800</pubDate>
      
      <guid>http://yrq110.me/post/devops/study-on-lerna/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/lerna/lerna&#34;&gt;lerna&lt;/a&gt;是一个用于管理包含多个package结构的代码仓库的工具，优化工作流。新版的&lt;a href=&#34;https://github.com/vuejs/vue-cli&#34;&gt;&lt;strong&gt;vue-cli&lt;/strong&gt;&lt;/a&gt;、&lt;a href=&#34;https://github.com/nuxt/nuxt.js&#34;&gt;&lt;strong&gt;nuxt&lt;/strong&gt;&lt;/a&gt;与&lt;a href=&#34;https://github.com/babel/babel&#34;&gt;&lt;strong&gt;babel&lt;/strong&gt;&lt;/a&gt;均使用lerna进行自身的package管理。&lt;/p&gt;
&lt;p&gt;package可理解为功能模块或子项目。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>前端水果篮</title>
      <link>http://yrq110.me/post/practice/calathus/</link>
      <pubDate>Tue, 25 Apr 2017 19:31:28 +0800</pubDate>
      
      <guid>http://yrq110.me/post/practice/calathus/</guid>
      <description>&lt;p&gt;网络就像一颗果树，摘一些五彩缤纷的水果到篮子里。&lt;/p&gt;
&lt;p&gt;本项目&lt;a href=&#34;https://github.com/yrq110/fe-daily-piece&#34;&gt;GitHub&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MongoDB之旅(下)</title>
      <link>http://yrq110.me/post/database/mongo-travel-part-2/</link>
      <pubDate>Sat, 15 Apr 2017 20:58:03 +0800</pubDate>
      
      <guid>http://yrq110.me/post/database/mongo-travel-part-2/</guid>
      <description>&lt;p&gt;介绍副本集、分片、备份等内容&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MongoDB之旅(上)</title>
      <link>http://yrq110.me/post/database/mongo-travel-part-1/</link>
      <pubDate>Wed, 22 Mar 2017 23:29:34 +0800</pubDate>
      
      <guid>http://yrq110.me/post/database/mongo-travel-part-1/</guid>
      <description>&lt;p&gt;介绍数据类型、shell、基本操作等内容&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>《CSS揭秘》示例练习</title>
      <link>http://yrq110.me/post/practice/css-secret-note/</link>
      <pubDate>Sun, 01 Jan 2017 17:02:32 +0800</pubDate>
      
      <guid>http://yrq110.me/post/practice/css-secret-note/</guid>
      <description>&lt;p&gt;按钮、背景与边框、形状、视觉效果&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>配置SSH访问GitHub</title>
      <link>http://yrq110.me/post/devops/github-ssh-config/</link>
      <pubDate>Thu, 18 Aug 2016 22:25:39 +0800</pubDate>
      
      <guid>http://yrq110.me/post/devops/github-ssh-config/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://help.github.com/categories/ssh&#34;&gt;GitHub_SSH帮助文件&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>