<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>threejs on ￥ЯႭ1I0</title>
    <link>http://yrq110.me/tags/threejs/</link>
    <description>Recent content in threejs on ￥ЯႭ1I0</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 13 May 2020 10:42:58 +0800</lastBuildDate>
    
	<atom:link href="http://yrq110.me/tags/threejs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>深入学习Three.js核心对象之（三）Material</title>
      <link>http://yrq110.me/post/front-end/deep-in-threejs-core-objects-iii-material/</link>
      <pubDate>Wed, 13 May 2020 10:42:58 +0800</pubDate>
      
      <guid>http://yrq110.me/post/front-end/deep-in-threejs-core-objects-iii-material/</guid>
      <description>&lt;p&gt;这次分析构成模型对象的另一个重要元素：Material（材质）。&lt;/p&gt;
&lt;p&gt;主要介绍:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Material的属性及WebGLRenderer的处理: 属性分类、预处理宏与自定义标记&lt;/li&gt;
&lt;li&gt;部分属性解读(Todo): 融合属性、深度测试、模板测试、裁剪、多边形偏移等&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>深入学习Three.js核心对象之（二）Geometry</title>
      <link>http://yrq110.me/post/front-end/deep-in-threejs-core-objects-ii-geometry/</link>
      <pubDate>Mon, 11 May 2020 10:38:16 +0800</pubDate>
      
      <guid>http://yrq110.me/post/front-end/deep-in-threejs-core-objects-ii-geometry/</guid>
      <description>&lt;p&gt;这次分析构成模型对象的重要元素之一：Geometry（几何体）。&lt;/p&gt;
&lt;p&gt;主要介绍:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Geometry的属性: 基础属性与动画属性&lt;/li&gt;
&lt;li&gt;Geometry的方法: 基础变换、Mesh与顶点合并、点面法线、包围盒/球计算&lt;/li&gt;
&lt;li&gt;BufferGeometry 与 DirectGeometry(Todo)&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>深入学习Three.js核心对象之（一）Object3D</title>
      <link>http://yrq110.me/post/front-end/deep-in-threejs-core-objects-i-object3d/</link>
      <pubDate>Wed, 06 May 2020 19:15:03 +0800</pubDate>
      
      <guid>http://yrq110.me/post/front-end/deep-in-threejs-core-objects-i-object3d/</guid>
      <description>&lt;p&gt;从底层对象开始，看看Threejs如何利用图形学知识，通过各种数据对象构建场景，最终通过渲染器绘制出来。&lt;/p&gt;
&lt;p&gt;先来看看最基础的Object3D对象，内容包含：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;官方demo引入: 主要对象分析&lt;/li&gt;
&lt;li&gt;Object3D的属性: 位置、欧拉角、四元数、变换矩阵等&lt;/li&gt;
&lt;li&gt;Object3D的变换: 以世界空间或模型空间为参考系的基础变换&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>